#include "services_dune.fcl"

#process_name: OnlineMonitor
process_name: SSPDumptest

services:
{
  TimeTracker:       {}
  RandomNumberGenerator: {}
  message:              @local::dune_message_services_prod_debug
  FileCatalogMetadata:  @local::art_file_catalog_mc
#                        @table::protodune_services
 ExptGeoHelperInterface:       @local::dune_geometry_helper
 Geometry:                     @local::protodune_geo
 DetectorClocksService:        @local::dunefd_detectorclocks
 DetectorPropertiesService:    @local::protodune_detproperties
 LArPropertiesService:         @local::dunefd_properties
# LArFFT:                       @local::dunefd_larfft
 DatabaseUtil:                 @local::dunefd_database
# BackTracker:                  @local::dunefd_backtracker
# SpaceCharge:                  @local::protodune_spacecharge
# NuRandomService:              @local::dune_seedservice
# SignalShapingServiceDUNE:     @local::dunefd_signalshapingservice
 ChannelStatusService:         @local::dunefd_channel_status
 ChannelGroupService:          @local::changroup_apa

  TFileService: { fileName: "onlinemonit.root" }

}


source:
{

  module_type: RootInput
  maxEvents: -1
  # fileNames: ["input_file.root"]
  ## fileNames: ["/afs/cern.ch/user/s/sergiand/public/g4single_detsim.root"]
  fileNames: ["data/pdune_r1000092_sr01_20170630T110117_1_0.root"]      ## Jen PD DAQ data

}





 physics:
{
  analyzers:
  {
    SSPDump:
    {
      module_type: SSPDump
      raw_data_label: daq
      frag_type: PHOTON
      verbose_metadata: true
      verbose_adcs: 2048

      SSPm1:               10  #samples used to calculate peak height
      SSPm2:               10
      SSPi1:               500 #samples used to calculate pedestal
      SSPi2:               500 #samples used to calculate peak height

    }
  }

  a1: [ SSPDump ]
  e1: [ out1 ]
  end_paths: [ a1, e1 ]
}

services : {
  TFileService:
  {
      fileName: "SSPDumpOutput.root"
  }
}





outputs:
{
  out1:
  {
    module_type: FileDumperOutput
    wantProductFriendlyClassName: true
  }
}

#source:
#{
#  module_type: RootInput
#}

process_name: EVTDUMP
 






